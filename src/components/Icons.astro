---
import { fileURLToPath } from 'url';
import { resolve as resolvePath, dirname } from 'path';
import { parse } from 'node-html-parser';
import { readFileSync } from"fs";

export interface Props {
  icon: string;
  alt: string;
}

// this gives the file path
const __filename = fileURLToPath(import.meta.url);

// convert the filepath to a directory
const __dirname = dirname(__filename);

function getSVG(name: string) {
  const files = import.meta.glob<string>('../assets/icons/*.svg', {
    as: 'raw',
  });
  
  const filepath = `../assets/icons/${name}.svg`;
  if (!files[filepath]) {
    throw new Error(`${filepath} not found`);
  }


  const fileContent = readFileSync(resolvePath(__dirname, filepath), "utf-8");
  const root = parse(fileContent)
  const svg = root.querySelector('svg');
  if (!svg) {
    throw new Error(`SVG element not found in ${filepath}`);
  }
  const { attributes, innerHTML } = svg;

  return {
    attributes,
    innerHTML,
  };

 

  // const root = parse(files[filepath]);
//   console.log("root:", root)

}

const { icon, alt, ...attributes } = Astro.props as Props;
const { attributes: baseAttributes, innerHTML } = getSVG(icon);

const svgAttributes = { ...baseAttributes, ...attributes };
---


<svg
  {...svgAttributes}
  set:html={innerHTML}
  aria-label={alt}
  role="img"
></svg>